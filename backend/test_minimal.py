#!/usr/bin/env python3
"""
Minimal test script to identify startup issues
"""

import sys
import os
import logging
from pathlib import Path

# Setup basic logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# Ensure we're in the correct directory
backend_dir = Path(__file__).parent.absolute()
os.chdir(backend_dir)
sys.path.insert(0, str(backend_dir))

def test_imports():
    """Test all critical imports"""
    try:
        logger.info("üîç Testing basic imports...")
        
        logger.info("1. Testing config import...")
        from app.core.config import settings
        logger.info(f"‚úÖ Config loaded - Environment: {settings.ENVIRONMENT}")
        
        logger.info("2. Testing database import...")
        from app.core.database import init_database
        logger.info("‚úÖ Database import successful")
        
        logger.info("3. Testing main app import...")
        from app.main import app
        logger.info("‚úÖ Main app imported successfully")
        
        logger.info("4. Testing uvicorn import...")
        import uvicorn
        logger.info("‚úÖ Uvicorn available")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå Import failed: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_minimal_server():
    """Test if we can start a minimal server"""
    try:
        logger.info("üöÄ Testing minimal server startup...")
        
        from app.main import app
        import uvicorn
        
        # Test configuration
        config = {
            "app": app,
            "host": "0.0.0.0",
            "port": 8000,
            "log_level": "info",
            "access_log": False,
            "reload": False,
        }
        
        logger.info("‚úÖ Server configuration ready")
        logger.info("üéØ Starting server...")
        
        # This will actually start the server
        uvicorn.run(**config)
        
    except Exception as e:
        logger.error(f"‚ùå Server startup failed: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    logger.info("üîç MINIMAL STARTUP TEST")
    
    # Test imports first
    if not test_imports():
        logger.error("‚ùå Import test failed")
        sys.exit(1)
    
    logger.info("‚úÖ All imports successful")
    
    # Test server startup
    test_minimal_server()
