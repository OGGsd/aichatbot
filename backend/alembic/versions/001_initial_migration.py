"""Initial migration

Revision ID: 001
Revises:
Create Date: 2024-01-01 00:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create chat_sessions table
    op.create_table('chat_sessions',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=True),
    sa.Column('config_id', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chat_sessions_active', 'chat_sessions', ['is_active'], unique=False)
    op.create_index('idx_chat_sessions_created_at', 'chat_sessions', ['created_at'], unique=False)
    op.create_index('idx_chat_sessions_user_id', 'chat_sessions', ['user_id'], unique=False)

    # Create chat_messages table
    op.create_table('chat_messages',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('session_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_message', sa.Text(), nullable=False),
    sa.Column('ai_response', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('config_used', sa.String(length=255), nullable=True),
    sa.Column('rag_context', sa.JSON(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('flagged', sa.Boolean(), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chat_messages_flagged', 'chat_messages', ['flagged'], unique=False)
    op.create_index('idx_chat_messages_session_id', 'chat_messages', ['session_id'], unique=False)
    op.create_index('idx_chat_messages_timestamp', 'chat_messages', ['timestamp'], unique=False)

    # Create documents table
    op.create_table('documents',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('chunk_count', sa.Integer(), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('config_id', sa.String(length=255), nullable=True),
    sa.Column('uploaded_by', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_documents_config_id', 'documents', ['config_id'], unique=False)
    op.create_index('idx_documents_created_at', 'documents', ['created_at'], unique=False)
    op.create_index('idx_documents_file_type', 'documents', ['file_type'], unique=False)
    op.create_index('idx_documents_status', 'documents', ['status'], unique=False)

    # Create document_chunks table
    op.create_table('document_chunks',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('document_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('start_char', sa.Integer(), nullable=False),
    sa.Column('end_char', sa.Integer(), nullable=False),
    sa.Column('embedding', sa.JSON(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_document_chunks_chunk_index', 'document_chunks', ['chunk_index'], unique=False)
    op.create_index('idx_document_chunks_document_id', 'document_chunks', ['document_id'], unique=False)

    # Create document_metadata table
    op.create_table('document_metadata',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('document_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('author', sa.String(length=255), nullable=True),
    sa.Column('subject', sa.String(length=500), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('char_count', sa.Integer(), nullable=True),
    sa.Column('encoding', sa.String(length=50), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('document_metadata')
    op.drop_index('idx_document_chunks_document_id', table_name='document_chunks')
    op.drop_index('idx_document_chunks_chunk_index', table_name='document_chunks')
    op.drop_table('document_chunks')
    op.drop_index('idx_documents_status', table_name='documents')
    op.drop_index('idx_documents_file_type', table_name='documents')
    op.drop_index('idx_documents_created_at', table_name='documents')
    op.drop_index('idx_documents_config_id', table_name='documents')
    op.drop_table('documents')
    op.drop_index('idx_chat_messages_timestamp', table_name='chat_messages')
    op.drop_index('idx_chat_messages_session_id', table_name='chat_messages')
    op.drop_index('idx_chat_messages_flagged', table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index('idx_chat_sessions_user_id', table_name='chat_sessions')
    op.drop_index('idx_chat_sessions_created_at', table_name='chat_sessions')
    op.drop_index('idx_chat_sessions_active', table_name='chat_sessions')
    op.drop_table('chat_sessions')
    # ### end Alembic commands ###